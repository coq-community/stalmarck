---
fullname: Stalmarck
shortname: stalmarck
organization: coq-community
community: true
action: false
nix: true
doi: 10.1007/3-540-44659-1_24
plugin: true
branch: v8.17
dune: false

synopsis: Verified implementation of Stålmarck's algorithm for proving tautologies in Coq

description: |-
  A two-level approach to prove tautologies using Stålmarck's
  algorithm in Coq.

publications:
- pub_doi: 10.1007/3-540-44659-1_24
  pub_url: https://www.irif.fr/~letouzey/download/stalmarck.ps.gz
  pub_title: Formalizing Stålmarck's Algorithm in Coq

authors:
- name: Pierre Letouzey
  initial: true
- name: Laurent Théry
  initial: true

maintainers:
- name: Karl Palmskog
  nickname: palmskog

opam-file-maintainer: palmskog@gmail.com

opam-file-version: 8.17.dev

license:
  fullname: GNU Lesser General Public License v2.1 or later
  identifier: LGPL-2.1-or-later

supported_coq_versions:
  text: 8.17 (use the corresponding branch or release for other Coq versions)
  opam: '{>= "8.17" & < "8.18"}'

tested_coq_nix_versions:
- coq_version: 'v8.17'

tested_coq_opam_versions:
- version: '8.17'

namespace: Stalmarck.Algorithm

keywords:
- name: boolean formula
- name: tautology checker

categories:
- name: Computer Science/Decision Procedures and Certified Algorithms/Decision procedures

documentation: |
  ## Documentation

  This project is composed of:

  - A Coq proof of correctness of the algorithm, as described in the paper
    [A Formalization of Stålmarck's Algorithm in Coq][paper-link], published
    in the proceedings of TPHOLs 2000.
  - an implementation of the algorithm. With respect to the paper, this
    implementation is completely functional and can be used inside Coq.
  - A reflected Coq tactic `staltac` that uses the extracted code to compute
    an execution trace; the trace checker is then called inside Coq.
  - A standalone checker program `stalmarck` which takes as input a formula in
    textual format and reports whether it can be certified as a tautology.

  See `algoRun.v` for examples how to use the algorithm inside Coq, and
  see `StalTac_ex.v` for examples how to use the reflected tactic.

  [paper-link]: https://www.irif.fr/~letouzey/download/stalmarck.ps.gz
---
